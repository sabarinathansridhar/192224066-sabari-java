import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class PrimeCompositeCounter {

    // Method to check if a number is prime
    private static boolean isPrime(int number) {
        if (number <= 1) {
            return false;
        }
        if (number == 2) {
            return true;
        }
        if (number % 2 == 0) {
            return false;
        }
        for (int i = 3; i <= Math.sqrt(number); i += 2) {
            if (number % i == 0) {
                return false;
            }
        }
        return true;
    }

    // Main method
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        List<Integer> numbers = new ArrayList<>();

        // Prompt the user for input
        System.out.println("Enter a list of integers separated by spaces (press Enter to finish):");
        String input = scanner.nextLine();
        String[] tokens = input.split("\\s+");

        // Process the input and handle edge cases
        for (String token : tokens) {
            try {
                int number = Integer.parseInt(token);
                numbers.add(number);
            } catch (NumberFormatException e) {
                System.out.println("Error: \"" + token + "\" is not a valid integer.");
                return;
            }
        }

        // Edge case for empty list
        if (numbers.isEmpty()) {
            System.out.println("The list is empty.");
            return;
        }

        int primeCount = 0;
        int compositeCount = 0;

        // Count prime and composite numbers
        for (int number : numbers) {
            if (number < 0) {
                System.out.println("Error: Negative numbers are not allowed.");
                return;
            }
            if (number > 1) {
                if (isPrime(number)) {
                    primeCount++;
                } else {
                    compositeCount++;
                }
            }
        }

        // Output the results
        System.out.println("Number of prime numbers: " + primeCount);
        System.out.println("Number of composite numbers: " + compositeCount);
    }
}
